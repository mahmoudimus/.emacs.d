# -*- mode: python -*-
# -*- coding: utf-8 -*-
# name: new2
# contributor: Mahmoud Abdelkader
# key: new2
# expand-env: ((yas/indent-line 'nil))
# --
import logging
import argparse
import sys


logger = logging.getLogger(__name__)


def add_logging_options(options):
    options.add_argument(
        '-l', '--log-level',
        default='WARNING',
        help='Set the logging level',
        choices=[
            'debug',
            'info',
            'warn',
            'warning',
            'error',
            'critical',
            'fatal',
            ],
        )
    return options


def conf_logging(cli_arguments):
    logger = logging.getLogger()
    sfmt = '%(asctime)s : %(levelname)s : %(name)s : %(message)s'
    formatter = logging.Formatter(sfmt)
    handler = logging.StreamHandler(sys.stdout)
    handler.setFormatter(formatter)
    logger.addHandler(handler)
    logger.setLevel(getattr(logging, cli_arguments.log_level.upper()))


def execute(parser):
    args = parser.parse_args()
    conf_logging(args)
    logger.info('hello world!')


def main():
    option_parser = argparse.ArgumentParser()
    option_parser = add_logging_options(option_parser)
    execute(option_parser)


if __name__ == '__main__':
    main()
