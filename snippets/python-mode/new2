# -*- coding: utf-8 -*-
# name: new2
# contributor: Mahmoud Abdelkader
# key: new2
# expand-env: ((yas/indent-line 'nil))
# --
from __future__ import unicode_literals
import logging
import argparse
import sys

$1
logger = logging.getLogger(__name__)


def create_arg_parser():
    parser = argparse.ArgumentParser()
    parser.add_argument(
        '-l', '--log-level',
        default=logging.WARNING,
        help='Set the logging level',
        choices=[
            'debug',
            'info',
            'warn',
            'warning',
            'error',
            'critical',
            'fatal',
            ],
        )
    return parser


def conf_logging(args):
    logger = logging.getLogger()
    formatter = logging.Formatter(
        '%(asctime)s : %(levelname)s : %(name)s : %(message)s')
    handler = logging.StreamHandler(sys.stdout)
    handler.setFormatter(formatter)
    logger.addHandler(handler)
    logger.setLevel(getattr(logging, args.log_level.upper()))


def execute(args):
    logger.info('hello world!')


def main():
    arg_parser = create_arg_parser()
    args = arg_parser.parse_args()
    conf_logging(args)
    execute(args)


if __name__ == '__main__':
    main()
